!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Accept	csapp.c	/^int Accept(int s, struct sockaddr *addr, socklen_t *addrlen) $/;"	f
Alarm	csapp.c	/^unsigned int Alarm(unsigned int seconds) {$/;"	f
Bind	csapp.c	/^void Bind(int sockfd, struct sockaddr *my_addr, int addrlen) $/;"	f
CC	complicate/Makefile	/^CC = gcc;$/;"	m
CFLAGS	complicate/Makefile	/^CFLAGS = -Wall -O -g$/;"	m
CONVERT	rfork.c	11;"	d	file:
Calloc	csapp.c	/^void *Calloc(size_t nmemb, size_t size) $/;"	f
Close	csapp.c	/^void Close(int fd) $/;"	f
Connect	csapp.c	/^void Connect(int sockfd, struct sockaddr *serv_addr, int addrlen) $/;"	f
DEF_MODE	csapp.h	30;"	d
DEF_UMASK	csapp.h	31;"	d
Dup2	csapp.c	/^int Dup2(int fd1, int fd2) $/;"	f
EOF	echo.c	1;"	d	file:
Execve	csapp.c	/^void Execve(const char *filename, char *const argv[], char *const envp[]) $/;"	f
Fclose	csapp.c	/^void Fclose(FILE *fp) $/;"	f
Fdopen	csapp.c	/^FILE *Fdopen(int fd, const char *type) $/;"	f
Fgets	csapp.c	/^char *Fgets(char *ptr, int n, FILE *stream) $/;"	f
Fopen	csapp.c	/^FILE *Fopen(const char *filename, const char *mode) $/;"	f
Fork	Fork.c	/^pid_t Fork(void) {$/;"	f
Fork	csapp.c	/^pid_t Fork(void) $/;"	f
Fork	fork.c	/^pid_t Fork(void) {$/;"	f
Fork	rfork.c	/^pid_t Fork(void) {$/;"	f
Fputs	csapp.c	/^void Fputs(const char *ptr, FILE *stream) $/;"	f
Fread	csapp.c	/^size_t Fread(void *ptr, size_t size, size_t nmemb, FILE *stream) $/;"	f
Free	csapp.c	/^void Free(void *ptr) $/;"	f
Fstat	csapp.c	/^void Fstat(int fd, struct stat *buf) $/;"	f
Fwrite	csapp.c	/^void Fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream) $/;"	f
Gethostbyaddr	csapp.c	/^struct hostent *Gethostbyaddr(const char *addr, int len, int type) $/;"	f
Gethostbyname	csapp.c	/^struct hostent *Gethostbyname(const char *name) $/;"	f
Getpgrp	csapp.c	/^pid_t Getpgrp(void) {$/;"	f
IS_CURCLE	iscircle.c	3;"	d	file:
Kill	csapp.c	/^void Kill(pid_t pid, int signum) $/;"	f
LISTENQ	csapp.h	57;"	d
Listen	csapp.c	/^void Listen(int s, int backlog) $/;"	f
Lseek	csapp.c	/^off_t Lseek(int fildes, off_t offset, int whence) $/;"	f
M	define.c	3;"	d	file:
MAX	defi.c	3;"	d	file:
MAXARGS	reverse.c	3;"	d	file:
MAXARGS	shellex.c	2;"	d	file:
MAXBUF	csapp.h	56;"	d
MAXLINE	csapp.h	55;"	d
MAXLINE	reverse.c	4;"	d	file:
MAX_SLEEP	rfork.c	8;"	d	file:
MOLECULE	water.c	3;"	d	file:
Malloc	csapp.c	/^void *Malloc(size_t size) $/;"	f
Mmap	csapp.c	/^void *Mmap(void *addr, size_t len, int prot, int flags, int fd, off_t offset) $/;"	f
Munmap	csapp.c	/^void Munmap(void *start, size_t length) $/;"	f
N	Pp.c	2;"	d	file:
N	bubble.c	3;"	d	file:
N	bubblesort.c	3;"	d	file:
N	delete_space.c	2;"	d	file:
N	max_min.c	2;"	d	file:
N	selectsort.c	3;"	d	file:
N	struct.c	2;"	d	file:
N	waitpid_not_sure.c	2;"	d	file:
N	waitpid_sure.c	2;"	d	file:
NULL	echo.c	2;"	d	file:
NUM	ifdef.c	2;"	d	file:
OBJS	complicate/Makefile	/^OBJS = main.o kdb.o command.o display.o \\$/;"	m
OBJS	lc/Makefile	/^OBJS = hello.c$/;"	m
Open	csapp.c	/^int Open(const char *pathname, int flags, mode_t mode) $/;"	f
Open_clientfd	csapp.c	/^int Open_clientfd(char *hostname, int port) $/;"	f
Open_listenfd	csapp.c	/^int Open_listenfd(int port) $/;"	f
P	csapp.c	/^void P(sem_t *sem) $/;"	f
Pause	csapp.c	/^void Pause() $/;"	f
Pthread_cancel	csapp.c	/^void Pthread_cancel(pthread_t tid) {$/;"	f
Pthread_create	csapp.c	/^void Pthread_create(pthread_t *tidp, pthread_attr_t *attrp, $/;"	f
Pthread_detach	csapp.c	/^void Pthread_detach(pthread_t tid) {$/;"	f
Pthread_exit	csapp.c	/^void Pthread_exit(void *retval) {$/;"	f
Pthread_join	csapp.c	/^void Pthread_join(pthread_t tid, void **thread_return) {$/;"	f
Pthread_once	csapp.c	/^void Pthread_once(pthread_once_t *once_control, void (*init_function)()) {$/;"	f
Pthread_self	csapp.c	/^pthread_t Pthread_self(void) {$/;"	f
QUART	water.c	2;"	d	file:
RIO_BUFSIZE	csapp.h	41;"	d
Read	csapp.c	/^ssize_t Read(int fd, void *buf, size_t count) $/;"	f
Realloc	csapp.c	/^void *Realloc(void *ptr, size_t size) $/;"	f
Rio_readinitb	csapp.c	/^void Rio_readinitb(rio_t *rp, int fd)$/;"	f
Rio_readlineb	csapp.c	/^ssize_t Rio_readlineb(rio_t *rp, void *usrbuf, size_t maxlen) $/;"	f
Rio_readn	csapp.c	/^ssize_t Rio_readn(int fd, void *ptr, size_t nbytes) $/;"	f
Rio_readnb	csapp.c	/^ssize_t Rio_readnb(rio_t *rp, void *usrbuf, size_t n) $/;"	f
Rio_writen	csapp.c	/^void Rio_writen(int fd, void *usrbuf, size_t n) $/;"	f
S1	structure.c	/^struct S1 {$/;"	s	file:
S3	sizeof.c	/^struct S3 {$/;"	s	file:
SA	csapp.h	/^typedef struct sockaddr SA;$/;"	t	typeref:struct:sockaddr
Select	csapp.c	/^int Select(int  n, fd_set *readfds, fd_set *writefds,$/;"	f
Sem_init	csapp.c	/^void Sem_init(sem_t *sem, int pshared, unsigned int value) $/;"	f
Setpgid	csapp.c	/^void Setpgid(pid_t pid, pid_t pgid) {$/;"	f
Setsockopt	csapp.c	/^void Setsockopt(int s, int level, int optname, const void *optval, int optlen) $/;"	f
Sigaddset	csapp.c	/^void Sigaddset(sigset_t *set, int signum)$/;"	f
Sigdelset	csapp.c	/^void Sigdelset(sigset_t *set, int signum)$/;"	f
Sigemptyset	csapp.c	/^void Sigemptyset(sigset_t *set)$/;"	f
Sigfillset	csapp.c	/^void Sigfillset(sigset_t *set)$/;"	f
Sigismember	csapp.c	/^int Sigismember(const sigset_t *set, int signum)$/;"	f
Signal	csapp.c	/^handler_t *Signal(int signum, handler_t *handler) $/;"	f
Sigprocmask	csapp.c	/^void Sigprocmask(int how, const sigset_t *set, sigset_t *oldset)$/;"	f
Sleep	csapp.c	/^unsigned int Sleep(unsigned int secs) $/;"	f
Socket	csapp.c	/^int Socket(int domain, int type, int protocol) $/;"	f
Stat	csapp.c	/^void Stat(const char *filename, struct stat *buf) $/;"	f
U3	sizeof.c	/^union U3 {$/;"	u	file:
V	csapp.c	/^void V(sem_t *sem) $/;"	f
WEIGHT	water.c	4;"	d	file:
Wait	csapp.c	/^pid_t Wait(int *status) $/;"	f
Waitpid	csapp.c	/^pid_t Waitpid(pid_t pid, int *iptr, int options) $/;"	f
Write	csapp.c	/^ssize_t Write(int fd, const void *buf, size_t count) $/;"	f
__CSAPP_H__	csapp.h	3;"	d
a	day.c	/^int a[][13] = {$/;"	v
a	fact.c	/^int a[3] = {1, 3, 5};$/;"	v
a	max.c	/^int a[][5] = {{ 8, 14, 11, 2, 5},$/;"	v
abc	fun3.c	/^void abc(int sig)$/;"	f
absdiff	asm/absdiff.c	/^int absdiff(int x, int y) {$/;"	f
absdiff	asm/absdiff.s	/^absdiff:$/;"	l
accum	asm/code.c	/^int accum = 0;$/;"	v
accum	asm/code.s	/^accum:$/;"	l
accum	asm/code1.c	/^int accum = 123;$/;"	v
accum	asm/code1.s	/^accum:$/;"	l
add1	gdb_18.c	/^int add1(int m) {$/;"	f
add_record_tracks	sh/ch02/app/cd_db	/^add_record_tracks() {$/;"	f
add_records	sh/ch02/app/cd_db	/^add_records() {$/;"	f
addvec	archive/addvec.c	/^void addvec(int *x, int *y, int *z,$/;"	f
app_error	csapp.c	/^void app_error(char *msg) \/* Application error *\/$/;"	f
bar	setjmp.c	/^void bar(void){$/;"	f
buf	link/main.c	/^int buf[2] = {1, 2};$/;"	v
buf	restart.c	/^sigjmp_buf buf;$/;"	v
buf	setjmp.c	/^jmp_buf buf;$/;"	v
bufp0	link/swap.c	/^int *bufp0 = &buf[0];$/;"	v
bufp1	link/swap.c	/^int *bufp1;$/;"	v
builtin_command	shellex.c	/^int builtin_command(char **argv){$/;"	f
byte_pointer	byte_pointer.c	/^typedef unsigned char * byte_pointer;$/;"	t	file:
c	sizeof.c	/^    char c;$/;"	m	struct:S3	file:
c	sizeof.c	/^    char c;$/;"	m	union:U3	file:
c	structure.c	/^        char c;$/;"	m	struct:S1	file:
caller	asm/swap_add.c	/^int caller() {$/;"	f
caller	asm/swap_add.s	/^caller:$/;"	l
complete	complete.c	/^int complete(int n) {$/;"	f
count_cds	sh/ch02/app/cd_db	/^count_cds() {$/;"	f
data	vec.c	/^    data_t *data;$/;"	m	struct:__anon2	file:
data	vec.c	/^    data_t *data;$/;"	m	struct:__anon3	file:
data	vec.c	/^    data_t *data;$/;"	m	struct:__anon4	file:
data	vec.c	/^    data_t *data;$/;"	m	struct:__anon5	file:
data	vec.c	/^    data_t *data;$/;"	m	struct:__anon6	file:
dns_error	csapp.c	/^void dns_error(char *msg) \/* DNS-style error *\/$/;"	f
dw_loop	asm/dw_loop.c	/^int dw_loop(int x, int y, int n) {$/;"	f
dw_loop	asm/dw_loop.s	/^dw_loop:$/;"	l
echo	echo.c	/^void echo() {$/;"	f
echo	echo.s	/^echo:$/;"	l
element	Pp.c	/^typedef struct element {$/;"	s	file:
error1	setjmp.c	/^int error1 = 0;$/;"	v
error2	setjmp.c	/^int error2 = 1;$/;"	v
eval	shellex.c	/^void eval(char *cmdline){$/;"	f
f	link_globe.c/bar2.c	/^void f(){$/;"	f
f	link_globe_2/bar3.c	/^void f() {$/;"	f
f	linker_weak/bar4.c	/^void f() {$/;"	f
f	linker_weak_diff/bar5.c	/^void f()$/;"	f
fact	fact.c	/^int fact(int n) {$/;"	f
fact_do	asm/fact.c	/^int fact_do (int n) {$/;"	f
fact_do	asm/fact.s	/^fact_do:$/;"	l
fact_for	asm/fact_for.c	/^int fact_for(int n) {$/;"	f
fact_for	asm/fact_for.s	/^fact_for:$/;"	l
fact_while	asm/fact_while.c	/^int fact_while(int n) {$/;"	f
fact_while	asm/fact_while.s	/^fact_while:$/;"	l
find_cd	sh/ch02/app/cd_db	/^find_cd() {$/;"	f
flag	Pp.c	/^    int flag ;$/;"	m	struct:element	file:
flag	struct.c	/^    int flag;$/;"	m	struct:__anon7	file:
foo	declare.c	/^int foo() {$/;"	f
foo	declare.s	/^foo:$/;"	l
foo	setjmp.c	/^void foo(void){$/;"	f
foo	sh/ch02/function	/^foo() {$/;"	f
foo	sh/ch02/local	/^foo() {$/;"	f
foo	sh/func.sh	/^foo() {$/;"	f
foo	sh/local.sh	/^foo() {$/;"	f
fun	fun3.c	/^pf fun(int sig, pf p_sig)$/;"	f
func	jump.c	/^func(void) {$/;"	f
func	tst.c	/^int func(int n) {$/;"	f
funl	complicate/test.c	/^int funl() {$/;"	f
get_confirm	sh/ch02/app/cd_db	/^get_confirm() {$/;"	f
get_return	sh/ch02/app/cd_db	/^get_return() {$/;"	f
get_vec_element	vec.c	/^int get_vec_element(vec_ptr v, long int index, data_t *dest)$/;"	f
gets	echo.c	/^char *gets(char *s){$/;"	f
gets	echo.s	/^gets:$/;"	l
globe	asm/globe.c	/^int globe (int x, int y) {$/;"	f
globe	asm/globe.s	/^globe:$/;"	l
globe_1	asm/globe.c	/^int globe_1 = 1;$/;"	v
globe_1	asm/globe.s	/^globe_1:$/;"	l
globe_2	asm/globe.c	/^int globe_2 = 2;$/;"	v
globe_2	asm/globe.s	/^globe_2:$/;"	l
globe_3	asm/globe.c	/^int globe_3 = 3;$/;"	v
globe_3	asm/globe.s	/^globe_3:$/;"	l
handle	delete_space.c	/^void handle(char s[]) {$/;"	f
handler	alarm.c	/^void handler(int sig){$/;"	f
handler	restart.c	/^void handler(int sig){$/;"	f
handler	sigint1.c	/^void handler(int sig) \/* SIGINT handler *\/$/;"	f
handler	snooze.c	/^void handler (int sig){$/;"	f
handler1	signal1.c	/^void handler1(int sig)$/;"	f
handler2	signal2.c	/^void handler2(int sig)$/;"	f
handler2	signal3.c	/^void handler2(int sig)$/;"	f
handler_t	csapp.h	/^typedef void handler_t(int);$/;"	t
i	local.c	/^int i = 5;$/;"	v
i	sizeof.c	/^    int i[2];$/;"	m	struct:S3	file:
i	sizeof.c	/^    int i[2];$/;"	m	union:U3	file:
i	structure.c	/^    int i;$/;"	m	struct:S1	file:
insert_title	sh/ch02/app/cd_db	/^insert_title() {$/;"	f
insert_track	sh/ch02/app/cd_db	/^insert_track() {$/;"	f
j	structure.c	/^        int j;$/;"	m	struct:S1	file:
len	vec.c	/^    long int len;$/;"	m	struct:__anon2	file:
len	vec.c	/^    long int len;$/;"	m	struct:__anon3	file:
len	vec.c	/^    long int len;$/;"	m	struct:__anon4	file:
len	vec.c	/^    long int len;$/;"	m	struct:__anon5	file:
len	vec.c	/^    long int len;$/;"	m	struct:__anon6	file:
list_tracks	sh/ch02/app/cd_db	/^list_tracks() {$/;"	f
loop_while	asm/loop_while.c	/^int loop_while(int a, int b) {$/;"	f
loop_while	asm/loop_while.s	/^loop_while:$/;"	l
main	1234.c	/^int main() {$/;"	f
main	Pp.c	/^int main(int argc, const char *argv[])$/;"	f
main	address.c	/^int main(int argc, const char *argv[])$/;"	f
main	alarm.c	/^int main() {$/;"	f
main	archive/dll.c	/^int main() {$/;"	f
main	archive/main2.c	/^int main() {$/;"	f
main	asm/j.c	/^int main() {$/;"	f
main	asm/main.c	/^int main() {$/;"	f
main	asm/print.c	/^int main() {$/;"	f
main	bank.c	/^int main() {$/;"	f
main	bubble.c	/^int main(int argc, const char *argv[])$/;"	f
main	bubblesort.c	/^int main(int argc, const char *argv[])$/;"	f
main	byte_pointer.c	/^int main() {$/;"	f
main	char.c	/^int main(int argc, const char *argv[])$/;"	f
main	char/char.c	/^int main() {$/;"	f
main	char_int.c	/^int main(int argc, const char *argv[])$/;"	f
main	complete.c	/^int main() {$/;"	f
main	complicate/main.c	/^int main() {$/;"	f
main	const.c	/^int main() {$/;"	f
main	cpp/myfirst.cpp	/^int main() {$/;"	f
main	cpp/string.cpp	/^int main() {$/;"	f
main	cut.c	/^int main() {$/;"	f
main	day.c	/^int main() {$/;"	f
main	defi.c	/^int main() {$/;"	f
main	define.c	/^int main() {$/;"	f
main	delete_space.c	/^int main() {$/;"	f
main	evenodd.c	/^int main() {$/;"	f
main	fact.c	/^int main() {$/;"	f
main	fecd.c	/^int main() {$/;"	f
main	fork.c	/^int main() {$/;"	f
main	fork_2.c	/^int main() {$/;"	f
main	fork_hello.c	/^int main () {$/;"	f
main	forkprob0.c	/^int main  () {$/;"	f
main	fun3.c	/^int main(int argc, const char *argv[])$/;"	f
main	fun_pointer.c	/^int main(int argc, const char *argv[])$/;"	f
main	gdb_18.c	/^int main() {$/;"	f
main	hello.c	/^int main() {$/;"	f
main	if.c	/^int main() {$/;"	f
main	ifdef.c	/^int main() {$/;"	f
main	iscircle.c	/^int main() {$/;"	f
main	jump.c	/^main() {$/;"	f
main	kill.c	/^int main() {$/;"	f
main	lc/hello.c	/^int main() {$/;"	f
main	link/main.c	/^int main() {$/;"	f
main	link_globe.c/foo2.c	/^int main() {$/;"	f
main	link_globe_2/foo3.c	/^int main() {$/;"	f
main	linker_main/bar1.c	/^int main() {$/;"	f
main	linker_main/foo1.c	/^int main(){$/;"	f
main	linker_weak/foo4.c	/^int main() {$/;"	f
main	linker_weak_diff/foo5.c	/^int main() {$/;"	f
main	local.c	/^int main() {$/;"	f
main	longlong.c	/^int int main(int argc, const char *argv[])$/;"	f
main	macro.c	/^int main() {$/;"	f
main	main.c	/^int main() {$/;"	f
main	main2.c	/^int main() {$/;"	f
main	max.c	/^int main(int argc, const char *argv[])$/;"	f
main	max_min.c	/^int main(int argc, const char *argv[])$/;"	f
main	mmapcopy.c	/^int main(int argc, char **argv){$/;"	f
main	myecho.c	/^int main(int argc, char *argv[], char *envp[])$/;"	f
main	number.c	/^int main() {$/;"	f
main	open.c	/^int main() {$/;"	f
main	pointer_array.c	/^int main(int argc, const char *argv[])$/;"	f
main	pointer_char.c	/^int main(int argc, const char *argv[])$/;"	f
main	pointer_compute.c	/^int main(int argc, const char *argv[])$/;"	f
main	pp.c	/^int main(int argc, const char *argv[])$/;"	f
main	quicksort.c	/^int main() {$/;"	f
main	rectangle1.c	/^int main(int argc, const char *argv[])$/;"	f
main	restart.c	/^int main() {$/;"	f
main	reverse.c	/^int main() {$/;"	f
main	score.c	/^int main() {$/;"	f
main	selectsort.c	/^int main(int argc, const char *argv[])$/;"	f
main	setjmp.c	/^int main() {$/;"	f
main	shellex.c	/^int main() {$/;"	f
main	sigint1.c	/^int main()$/;"	f
main	signal1.c	/^int main() $/;"	f
main	signal2.c	/^int main() $/;"	f
main	signal3.c	/^int main() $/;"	f
main	sizeof.c	/^int main () {$/;"	f
main	sizeofpointer.c	/^int main(int argc, const char *argv[])$/;"	f
main	sizeofvoidpointer.c	/^main() {$/;"	f
main	sizep.c	/^int main(int argc, const char *argv[])$/;"	f
main	snooze.c	/^int main(int argc, char **argv) {$/;"	f
main	string2num.c	/^int main(int argc, const char *argv[])$/;"	f
main	stringarr.c	/^int main(int argc, const char *argv[])$/;"	f
main	strlen.c	/^int main(int argc, const char *argv[])$/;"	f
main	struct.c	/^int main(int argc, const char *argv[])$/;"	f
main	structure.c	/^int main() {$/;"	f
main	switch.c	/^int main() {$/;"	f
main	test_char.c	/^int main(int argc, const char *argv[])$/;"	f
main	test_char.s	/^main:$/;"	l
main	tst.c	/^int main(void) {$/;"	f
main	tst1.c	/^int main() {$/;"	f
main	typedef.c	/^int main() {$/;"	f
main	uadd_ok_main.c	/^int main() {$/;"	f
main	void.c	/^int main(int argc, const char *argv[])$/;"	f
main	waitpid_not_sure.c	/^int main() {$/;"	f
main	waitpid_sure.c	/^int main() {$/;"	f
main	water.c	/^int main() {$/;"	f
main	weight.c	/^ int main(int argc, const char *argv[])$/;"	f
mmapcopy	mmapcopy.c	/^void mmapcopy(int fd, int size){$/;"	f
multvec	archive/multvec.c	/^void multvec(int *x, int *y, $/;"	f
name	Pp.c	/^    int name;$/;"	m	struct:element	file:
name	struct.c	/^    int name;$/;"	m	struct:__anon7	file:
new_vec	vec.c	/^vec_ptr new_vec(long int len) {$/;"	f
number	Pp.c	/^    int number;$/;"	m	struct:element	file:
number	struct.c	/^    int number;$/;"	m	struct:__anon7	file:
open_clientfd	csapp.c	/^int open_clientfd(char *hostname, int port) $/;"	f
open_listenfd	csapp.c	/^int open_listenfd(int port) $/;"	f
p	Pp.c	/^people p[N];$/;"	v
p	complicate/main.c	/^int p = 8;$/;"	v
p	struct.c	/^people p[N];$/;"	v
parseline	reverse.c	/^int parseline(char *buf, char **argv) {$/;"	f
parseline	shellex.c	/^int parseline(char *buf, char **argv){$/;"	f
people	Pp.c	/^} people; $/;"	t	typeref:struct:element	file:
people	struct.c	/^} people;$/;"	t	typeref:struct:__anon7	file:
pf	fun3.c	/^typedef void (*pf) (int);$/;"	t	file:
place	jump.c	/^jmp_buf place;$/;"	v
posix_error	csapp.c	/^void posix_error(int code, char *msg) \/* Posix-style error *\/$/;"	f
psum	psum.c	/^void psum(float a[], float[], long int n)$/;"	f
q	complicate/main.c	/^int q = 10;$/;"	v
quicksort	quicksort.c	/^void quicksort(int x[], int first, int last) {$/;"	f
remove_records	sh/ch02/app/cd_db	/^remove_records() {$/;"	f
rfact	asm/recur.c	/^int rfact(int n) {$/;"	f
rfact	asm/recur.s	/^rfact:$/;"	l
rio_buf	csapp.h	/^    char rio_buf[RIO_BUFSIZE]; \/* Internal buffer *\/$/;"	m	struct:__anon1
rio_bufptr	csapp.h	/^    char *rio_bufptr;          \/* Next unread byte in internal buf *\/$/;"	m	struct:__anon1
rio_cnt	csapp.h	/^    int rio_cnt;               \/* Unread bytes in internal buf *\/$/;"	m	struct:__anon1
rio_fd	csapp.h	/^    int rio_fd;                \/* Descriptor for this internal buf *\/$/;"	m	struct:__anon1
rio_read	csapp.c	/^static ssize_t rio_read(rio_t *rp, char *usrbuf, size_t n)$/;"	f	file:
rio_readinitb	csapp.c	/^void rio_readinitb(rio_t *rp, int fd) $/;"	f
rio_readlineb	csapp.c	/^ssize_t rio_readlineb(rio_t *rp, void *usrbuf, size_t maxlen) $/;"	f
rio_readn	csapp.c	/^ssize_t rio_readn(int fd, void *usrbuf, size_t n) $/;"	f
rio_readnb	csapp.c	/^ssize_t rio_readnb(rio_t *rp, void *usrbuf, size_t n) $/;"	f
rio_t	csapp.h	/^} rio_t;$/;"	t	typeref:struct:__anon1
rio_writen	csapp.c	/^ssize_t rio_writen(int fd, void *usrbuf, size_t n) $/;"	f
s	archive/string.c	/^char *s = "string";$/;"	v
s	delete_space.c	/^char s[N];$/;"	v
s	sizeof.c	/^}s;$/;"	v	typeref:struct:S3
set_menu_choice	sh/ch02/app/cd_db	/^set_menu_choice() {$/;"	f
show_bytes	byte_pointer.c	/^void show_bytes(byte_pointer start, int len) {$/;"	f
show_float1	byte_pointer.c	/^void show_float1(float x) {$/;"	f
show_int1	byte_pointer.c	/^void show_int1(int x) {$/;"	f
show_pointer1	byte_pointer.c	/^void show_pointer1(void *x) {$/;"	f
snooze	snooze.c	/^unsigned int snooze(unsigned int secs) {$/;"	f
sum	asm/code.c	/^int sum(int x, int y) {$/;"	f
sum	asm/code.s	/^sum:$/;"	l
sum	asm/code1.c	/^int sum(int x, int y) {$/;"	f
sum	asm/code1.s	/^sum:$/;"	l
sum	test1.c	/^int sum(int a, int b) {$/;"	f
sum	test1.s	/^sum:$/;"	l
swap	link/swap.c	/^void swap() {$/;"	f
swap_add	asm/swap_add.c	/^int swap_add(int *xp, int *yp)$/;"	f
swap_add	asm/swap_add.s	/^swap_add:$/;"	l
switch_eg	asm/switch_eg.c	/^int switch_eg(int x, int n) {$/;"	f
switch_eg	asm/switch_eg.s	/^switch_eg:$/;"	l
test	asm/test.c	/^int test ( int x, int y) {$/;"	f
test	asm/test.s	/^test:$/;"	l
u	sizeof.c	/^}u;$/;"	v	typeref:union:U3
uadd_ok	uadd_ok.c	/^int uadd_ok(unsigned short x, unsigned short y) {$/;"	f
uint32	typed.h	/^typedef unsigned long uint32;$/;"	t
unix_error	Fork.c	/^void unix_error(char *msg) {$/;"	f
unix_error	csapp.c	/^void unix_error(char *msg) \/* Unix-style error *\/$/;"	f
unix_error	fork.c	/^void unix_error(char *msg) {$/;"	f
update_cd	sh/ch02/app/cd_db	/^update_cd() {$/;"	f
v	sizeof.c	/^    double v;$/;"	m	struct:S3	file:
v	sizeof.c	/^    double v;$/;"	m	union:U3	file:
vec_length	vec.c	/^long int vec_length(vec_ptr v)$/;"	f
vec_ptr	vec.c	/^} vec_rec, *vec_ptr;$/;"	t	typeref:struct:__anon2	file:
vec_ptr	vec.c	/^} vector, *vec_ptr;$/;"	t	typeref:struct:__anon3	file:
vec_ptr	vec.c	/^} vector, *vec_ptr;$/;"	t	typeref:struct:__anon4	file:
vec_ptr	vec.c	/^} vector, *vec_ptr;$/;"	t	typeref:struct:__anon5	file:
vec_ptr	vec.c	/^} vector, *vec_ptr;$/;"	t	typeref:struct:__anon6	file:
vec_rec	vec.c	/^} vec_rec, *vec_ptr;$/;"	t	typeref:struct:__anon2	file:
vector	vec.c	/^} vector, *vec_ptr;$/;"	t	typeref:struct:__anon3	file:
vector	vec.c	/^} vector, *vec_ptr;$/;"	t	typeref:struct:__anon4	file:
vector	vec.c	/^} vector, *vec_ptr;$/;"	t	typeref:struct:__anon5	file:
vector	vec.c	/^} vector, *vec_ptr;$/;"	t	typeref:struct:__anon6	file:
x	archive/dll.c	/^int x[2] = {1, 2};$/;"	v
x	archive/main2.c	/^int x[2] = {1, 2};$/;"	v
x	complicate/test.c	/^int x = 0;$/;"	v
x	link_globe.c/bar2.c	/^int x = 15213;$/;"	v
x	link_globe.c/foo2.c	/^int x = 15213;$/;"	v
x	link_globe_2/bar3.c	/^int x;$/;"	v
x	link_globe_2/foo3.c	/^int x = 15213;$/;"	v
x	linker_weak/bar4.c	/^int x;$/;"	v
x	linker_weak/foo4.c	/^int x;$/;"	v
x	linker_weak_diff/bar5.c	/^double x;$/;"	v
x	linker_weak_diff/foo5.c	/^int x = 15213;$/;"	v
x	main2.c	/^int x[2] = {1, 2};$/;"	v
y	archive/dll.c	/^int y[2] = {3, 4};$/;"	v
y	archive/main2.c	/^int y[2] = {3, 4};$/;"	v
y	complicate/test.c	/^int y = 5;$/;"	v
y	linker_weak_diff/foo5.c	/^int y = 15212;$/;"	v
y	main2.c	/^int y[2] = {3, 4};$/;"	v
yes_or_no	sh/ch02/my_name	/^yes_or_no() {$/;"	f
yes_or_no	sh/funcr.sh	/^yes_or_no() {$/;"	f
z	archive/dll.c	/^int z[2];$/;"	v
z	archive/main2.c	/^int z[2];$/;"	v
z	main2.c	/^int z[2];$/;"	v
